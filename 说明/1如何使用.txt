构建橙狐recovery镜像步骤说明，参考橙狐官方wiki页面
https://wiki.orangefox.tech/en/dev/building
需要一台电脑，至少50G硬盘空间，建议100G以上，运行内存要6g以上（我用虚拟机给4g会途中报错中断），需要Linux系统，推荐使用debian系的发行版（比如Ubuntu、Linux Mint等）。ArchLinux也能用，但是挺麻烦的，至于其他发行版你自己看着办。
不推荐使用root权限构建

0.准备环境（debian系的发行版，会自动安装需要的软件包、设置git信息、设置adb规则、安装安卓sdk，其他发行版需要手动准备，这个部分只用第一次，以后不用运行了）
cd ~
sudo apt install git aria2 -y
git clone https://gitlab.com/OrangeFox/misc/scripts
cd scripts
sudo bash setup/android_build_env.sh
sudo bash setup/install_android_sdk.sh

如果repo安装失败（高概率，网址被墙），可能需要手动安装repo命令，可以考虑用sudo apt install repo或者去清华源或者中科大源，根据说明下载手动安装
我不是很确定这里装没装ccache（用来在构建的时候留下缓存，据说能加快下一次构建速度），如果没装，你可以手动装一个
最后获得recovery镜像时有一步是用java8来签名，虽然没有java8也能跳过签名得到img镜像，但是如果你介意的话，可以手动安装一个openjdk-8-jdk

1.下载橙狐源码（动态分区的手机用安卓10分支）
a.使用rsync（很慢）
mkdir ~/OrangeFox_10
cd ~/OrangeFox_10
rsync rsync://sources.orangefox.download/sources/fox_10.0 . --progress -a

b.或者使用脚本
（我是用的这种，git clone命令如果用git@gitlab.com:OrangeFox/sync.git地址，需要注册gitlab并添加ssh密钥，挺麻烦的，所以我用的https地址，这个部分只用第一次，以后不用运行了）
mkdir ~/OrangeFox_10
cd ~/OrangeFox_10
git clone https://gitlab.com/OrangeFox/sync.git
cd ~/OrangeFox_10/sync
./get_fox_10.sh ~/OrangeFox_10/fox_10.0

如果下载速度很慢的话，打开~/OrangeFox_10/fox_10.0/.repo/Manifest文件夹，把里面所有xml的aosp源换成清华源或者中科大源，把lineage源换成清华源或者github加速站（清华源速度快，但是有部分目录会提示丢失无法下载，我是同步完了之后，再改成github加速站再同步一遍补齐），把github源也换成github加速站，gitlab好像没办法，只能慢慢下载或者科学上网

这里有一个坑，坑了我一个星期，前面说明不要用root权限执行（因为你在普通用户目录下用root权限创建的文件，以后不用root权限就只能读取无法删改，很麻烦），但是这个脚本里面有一些bug，会导致只下载了构建twrp的最少源码，而没有下载橙狐自己的rec源码和vendor目录，所以下载完整个项目源码之后，需要手动
打开~/OrangeFox_10/fox_10.0/bootable目录，检查recovery文件夹里面到底是橙狐的源码还是twrp的源码，如果是twrp的就删除整个recovery文件夹，用这个命令下载橙狐的rec源码
cd ~/OrangeFox_10/fox_10.0/bootable
git clone --depth 1 https://gitlab.com/OrangeFox/bootable/Recovery.git -b fox_10.0 recovery

打开~/OrangeFox_10/fox_10.0/vendor目录，检查有没有recovery文件夹，如果没有，用这个命令下载橙狐的vendor目录
cd ~/OrangeFox_10/fox_10.0/vendor
git clone --depth 1 https://gitlab.com/OrangeFox/vendor/recovery.git -b fox_10.0 recovery

2.下载device目录（这个部分只用第一次，以后不用运行了）
cd ~/OrangeFox_10/fox_10.0
mkdir -p device/xiaomi
cd device/xiaomi
git clone https://github.com/sumiort/OFRP-device_xiaomi_atom.git atom

3.开始构建
cd ~/OrangeFox_10/fox_10.0
source build/envsetup.sh
export ALLOW_MISSING_DEPENDENCIES=true
export FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER=1
export LC_ALL="C"
lunch omni_atom-eng && mka recoveryimage
或者
cd ~/OrangeFox_10/sync
./build_fox.sh atom

这里如果有需要清理之前构建生成的文件重新构建，就加一个-c参数
./build_fox.sh atom -c

根据橙狐的变量说明，FOX_USE_TWRP_RECOVERY_IMAGE_BUILDER这个变量，设置为1会使用TWRP构建系统的工具构建recovery镜像，需要给构建系统中的build/core/Makefile文件打补丁（在运行get_fox_10.sh脚本的时候可能打过了，我印象中脚本里是有一个patch-manifest.diff补丁文件），如果有疑问，请不要使用此变量，但是实际上我看到的所有构建命令里，都默认加上了这条变量

4.如果编译期间没有错误，最终的recovery镜像将出现在out/target/product/atom/OrangeFox-unofficial-atom.img或者sync/BUILDS/atom/target/product/atom/OrangeFox-Unofficial-atom.img

